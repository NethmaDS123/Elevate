name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand({ ping: 1 })'"
          --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4

      # Frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install & Test Frontend
        working-directory: ./ElevateFrontend
        run: |
          npm ci
          npm run lint
          npm test -- --ci
          npm run build

      # Backend
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install & Test Backend
        working-directory: ./ElevateBackend
        env:
          MONGODB_URI: mongodb://localhost:27017/test_db
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          flake8 .
          mypy .
          pytest --maxfail=1 --disable-warnings -q

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
    steps:
      - uses: actions/checkout@v4

      # Frontend → Vercel
      - name: Install Vercel CLI
        run: npm install -g vercel
        working-directory: ./ElevateFrontend

      - name: Deploy Frontend to Vercel
        working-directory: ./ElevateFrontend
        run: |
          vercel --prod --confirm

      # Backend → Render
      - name: Trigger Render Web Service Deploy
        run: |
          curl -X POST https://api.render.com/deploy/${{ env.RENDER_SERVICE_ID }} \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ env.RENDER_API_KEY }}"
